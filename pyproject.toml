[tool.poetry]
name = "aes-blake"
version = "0.1.0"
description = ""
authors = ["Mattias Aabmets <mattias.aabmets@gmail.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.urls]
"Repository" = "https://github.com/aabmets/aes-blake"
"Documentation" = "https://github.com/aabmets/aes-blake/wiki"
"Bug Tracker" = "https://github.com/aabmets/aes-blake/issues"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
devtools-cli = "^0.13.3"
coverage = "^7.5.3"
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-pyright = "^0.0.6"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}
matplotlib = "^3.9.0"
rich = "^13.7.1"

[tool.pytest.ini_options]
console_output_style = "count"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["py_ref/tests"]
addopts = [
    "--cov=py_ref/src",
    "--cov-report=html",
    "--no-cov-on-fail",
    "--import-mode=append",
    "--numprocesses=auto",
    "--maxprocesses=4",
    "--dist=worksteal"
]
pythonpath = [
    ".",
    "./py_ref"
]

[tool.coverage.run]
source = ["py_ref/src"]
branch = true

[tool.coverage.report]
#fail_under = 90
skip_covered = true
skip_empty = true
ignore_errors = true
exclude_lines = [
    "@abstractmethod",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "def __repr__"
]

[tool.coverage.html]
directory = ".htmlcov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
